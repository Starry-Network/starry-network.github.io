{"version":3,"sources":["components/Navbar.jsx","components/mind.jpg","components/Hero.jsx","components/Features.jsx","components/More.jsx","components/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["NAV_ITEMS","label","icon","FaGithub","href","props","viewBox","role","xmlns","d","MobileNav","bg","useColorModeValue","color","minH","py","base","px","borderBottom","borderStyle","borderColor","align","map","navItem","MobileNavItem","children","useDisclosure","isOpen","onToggle","spacing","onClick","e","preventDefault","justify","_hover","textDecoration","fontWeight","as","ChevronDownIcon","transition","transform","w","h","in","animateOpacity","style","marginTop","mt","pl","borderLeft","child","DesktopNavItem","p","mr","fontSize","fill","Navbar","navTextColor","toggleColorMode","useColorMode","SwitchIcon","FaMoon","FaSun","md","flex","ml","display","Close","Hamburger","variant","aria-label","textAlign","useBreakpointValue","fontFamily","Hero","columns","Box","lineHeight","position","_after","content","width","height","bottom","left","zIndex","sm","lg","rounded","alt","src","mindImage","Feature","title","direction","mode","Features","maxW","mx","spacingX","spacingY","More","alignItems","justifyContent","SiParitysubstrate","Footer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.857e0c6a.chunk.js","sourcesContent":["import {\n  Box,\n  Flex,\n  Text,\n  IconButton,\n  Stack,\n  Collapse,\n  Link,\n  useColorModeValue,\n  useBreakpointValue,\n  useDisclosure,\n  Icon,\n  Spacer,\n  useColorMode,\n} from \"@chakra-ui/react\";\nimport { HamburgerIcon, CloseIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { FaMoon, FaSun, FaGithub } from \"react-icons/fa\";\n\n// from simple-icons\nconst SubstackIcon = (props) => (\n  <Icon viewBox=\"0 0 200 200\" {...props}>\n    <svg role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n      <title>Substack icon</title>\n      <path d=\"M22.539 8.242H1.46V5.406h21.08v2.836zM1.46 10.812V24L12 18.11 22.54 24V10.812H1.46zM22.54 0H1.46v2.836h21.08V0z\" />\n    </svg>\n  </Icon>\n);\n\nconst NAV_ITEMS = [\n  {\n    label: \"Github\",\n    icon: FaGithub,\n    href: \"https://github.com/Starry-Network\",\n  },\n  {\n    label: \"Substack\",\n    icon: SubstackIcon,\n    href: \"https://starry.substack.com\",\n  },\n];\n\nconst MobileNav = () => {\n  return (\n    <Stack\n      bg={useColorModeValue(\"white\", \"gray.800\")}\n      color={useColorModeValue(\"gray.600\", \"white\")}\n      minH={\"60px\"}\n      py={{ base: 2 }}\n      px={{ base: 4 }}\n      borderBottom={1}\n      borderStyle={\"solid\"}\n      borderColor={useColorModeValue(\"gray.200\", \"gray.900\")}\n      align={\"center\"}\n    >\n      {NAV_ITEMS.map((navItem) => (\n        <MobileNavItem key={navItem.label} {...navItem} />\n      ))}\n    </Stack>\n  );\n};\n\nconst MobileNavItem = ({ label, children, href }) => {\n  const { isOpen, onToggle } = useDisclosure();\n\n  return (\n    <Stack spacing={4} onClick={children && onToggle}>\n      <Link\n        py={2}\n        href={href ?? \"#\"}\n        onClick={(e) => {\n          if (children) {\n            e.preventDefault();\n          }\n        }}\n        justify={\"space-between\"}\n        align={\"center\"}\n        _hover={{\n          textDecoration: \"none\",\n        }}\n      >\n        <Text\n          fontWeight={600}\n          color={useColorModeValue(\"gray.600\", \"gray.200\")}\n        >\n          {label}\n        </Text>\n        {children && (\n          <Icon\n            as={ChevronDownIcon}\n            transition={\"all .25s ease-in-out\"}\n            transform={isOpen ? \"rotate(180deg)\" : \"\"}\n            w={6}\n            h={6}\n          />\n        )}\n      </Link>\n      <Collapse in={isOpen} animateOpacity style={{ marginTop: \"0!important\" }}>\n        <Stack\n          mt={2}\n          pl={4}\n          borderLeft={1}\n          borderStyle={\"solid\"}\n          borderColor={useColorModeValue(\"gray.200\", \"gray.700\")}\n          align={\"start\"}\n        >\n          {children &&\n            children.map((child) => (\n              <Link key={child.label} py={2} href={child.href}>\n                {child.label}\n              </Link>\n            ))}\n        </Stack>\n      </Collapse>\n    </Stack>\n  );\n};\n\nconst DesktopNavItem = ({ href, icon, color }) => {\n  return (\n    <Link href={href} p=\"2\" mr=\"2\" fontSize=\"lg\" color={color}>\n      <Icon fill={color} as={icon} />\n    </Link>\n  );\n};\nfunction Navbar() {\n  const { isOpen, onToggle } = useDisclosure();\n  const navTextColor = useColorModeValue(\"gray.900\", \"white\");\n  const { toggleColorMode } = useColorMode();\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun);\n\n  return (\n    <Box>\n      <Flex\n        as=\"header\"\n        bg={useColorModeValue(\"white\", \"gray.800\")}\n        minH=\"60px\"\n        py={{ base: 2 }}\n        px={{ base: 4, md: 20 }}\n        borderBottom={1}\n        borderStyle=\"solid\"\n        borderColor=\"gray.200\"\n        align=\"center\"\n      >\n        <Flex\n          flex={{ base: 1, md: \"auto\" }}\n          ml={{ base: -2 }}\n          display={{ base: \"flex\", md: \"none\" }}\n        >\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n            }\n            variant=\"ghost\"\n            aria-label=\"Toggle Navigation\"\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: \"center\", md: \"start\" }}>\n          <Link\n            href=\"/\"\n            textAlign={useBreakpointValue({ base: \"center\", md: \"left\" })}\n            fontFamily=\"heading\"\n            color={navTextColor}\n            _hover={{\n              textDecoration: \"none\",\n            }}\n          >\n            Starry\n          </Link>\n        </Flex>\n        <Spacer />\n        <Flex\n          flex={{ base: 0, md: 1 }}\n          justify={{ base: \"none\", md: \"flex-end\" }}\n        >\n          <Flex display={{ base: \"none\", md: \"flex\" }}>\n            {NAV_ITEMS.map((navItem) => (\n              <DesktopNavItem\n                color={navTextColor}\n                key={navItem.label}\n                {...navItem}\n              />\n            ))}\n          </Flex>\n        </Flex>\n\n        <Link\n          p={2}\n          fontSize=\"lg\"\n          color={navTextColor}\n          onClick={toggleColorMode}\n        >\n          <Icon as={SwitchIcon} />\n        </Link>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity={false}>\n        <MobileNav />\n      </Collapse>\n    </Box>\n  );\n}\n\nexport default Navbar;\n","export default __webpack_public_path__ + \"static/media/mind.c00b2562.jpg\";","import {\n  Image,\n  Flex,\n  Heading,\n  Text,\n  Box,\n  Stack,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport mindImage from \"./mind.jpg\";\n\nconst Hero = () => (\n  <SimpleGrid columns={{ base: 1, md: 2 }} spacing={10} py=\"12\">\n    <Stack\n      as={Box}\n      textAlign={\"center\"}\n      spacing={{ base: 8, md: 14 }}\n      py={{ base: 20, md: 36 }}\n    >\n      <Heading lineHeight={1.1}>\n        <Text\n          as={\"span\"}\n          position={\"relative\"}\n          _after={{\n            content: \"''\",\n            width: \"full\",\n            height: \"30%\",\n            position: \"absolute\",\n            bottom: 1,\n            left: 0,\n            bg: \"teal.300\",\n            zIndex: -1,\n          }}\n          fontSize={{ base: \"3xl\", sm: \"4xl\", lg: \"6xl\" }}\n        >\n          Use NFT and DAO\n        </Text>\n        <br />\n        <Text\n          as={\"span\"}\n          color={\"teal.300\"}\n          fontSize={{ base: \"2xl\", sm: \"3xl\", lg: \"5xl\" }}\n        >\n          to enter Web3.0 smoothly!\n        </Text>\n      </Heading>\n    </Stack>\n    <Flex>\n      <Image rounded={\"md\"} alt={\"feature image\"} src={mindImage} />\n    </Flex>\n  </SimpleGrid>\n);\n\nexport default Hero;\n","import {\n  Box,\n  Stack,\n  Text,\n  useColorModeValue as mode,\n  SimpleGrid,\n  Heading,\n} from \"@chakra-ui/react\";\nimport {\n  FcScatterPlot,\n  FcLike,\n  FcMindMap,\n  FcCollaboration,\n} from \"react-icons/fc\";\n\nconst Feature = (props) => {\n  const { title, children, icon } = props;\n  return (\n    <Stack\n      spacing={{ base: \"3\", md: \"6\" }}\n      direction={{ base: \"column\", md: \"row\" }}\n    >\n      <Box fontSize=\"6xl\">{icon}</Box>\n      <Stack spacing=\"1\">\n        <Text fontWeight=\"extrabold\" fontSize=\"lg\">\n          {title}\n        </Text>\n        <Box color={mode(\"gray.600\", \"gray.400\")}>{children}</Box>\n      </Stack>\n    </Stack>\n  );\n};\n\nconst Features = () => (\n  <>\n    <Heading\n      px={{ base: 6, md: 4 }}\n      py=\"12\"\n      fontSize={{ base: \"3xl\", md: \"5xl\" }}\n    >\n      Features\n    </Heading>\n    <Box as=\"section\" maxW=\"5xl\" mx=\"auto\" py=\"12\" px={{ base: \"6\", md: \"8\" }}>\n      <SimpleGrid\n        columns={{ base: 1, md: 2 }}\n        spacingX=\"10\"\n        spacingY={{ base: \"8\", md: \"14\" }}\n      >\n        <Feature title=\"Fragmentation\" icon={<FcScatterPlot />}>\n          Split your NFTs into smaller Non Fungible Tokens or Fungible Tokens,\n          and then use them to do what you want.\n        </Feature>\n        <Feature title=\"Combinable\" icon={<FcMindMap />}>\n          Combine different tokens together to turn them into Graph Token. Then\n          use your imagination, like creating a cat gentleman with an umbrella\n          and 100 dots!\n        </Feature>\n        <Feature title=\"Social\" icon={<FcLike />}>\n          Turn a piece or group of your work into fragmentation tokens and\n          distribute them to your followers.\n        </Feature>\n        <Feature title=\"DAO\" icon={<FcCollaboration />}>\n          Use DAO to manage some NFTs, and enjoy everything Starry has to offer.\n          Just DAO it!\n        </Feature>\n      </SimpleGrid>\n    </Box>\n  </>\n);\n\nexport default Features;\n","import { Center, Heading, Text, Flex, Stack, Icon,   useColorModeValue,\n} from \"@chakra-ui/react\";\nimport { SiParitysubstrate } from \"react-icons/si\";\n\nconst More = () => (\n  <Flex\n    w=\"full\"\n    minH=\"200px\"\n    alignItems=\"center\"\n    justifyContent=\"center\"\n    py=\"20\"\n    bg={useColorModeValue(\"teal.300\", \"gray.800\")}\n  >\n    <Stack spacing=\"6\">\n      <Center>\n        <Icon fontSize=\"7xl\" as={SiParitysubstrate} />\n      </Center>\n      <Heading lineHeight={1.1}>\n        <Text as={\"span\"} fontSize={{ base: \"2xl\", sm: \"3xl\", lg: \"5xl\" }}>\n          Starry is based on Substrate\n        </Text>\n      </Heading>\n    </Stack>\n  </Flex>\n);\n\nexport default More;\n","import { Box, Container, Text, useColorModeValue } from \"@chakra-ui/react\";\n\nconst Footer = () => (\n  <Box\n    bg={useColorModeValue(\"gray.50\", \"gray.800\")}\n    color={useColorModeValue(\"gray.700\", \"gray.200\")}\n  >\n    <Container maxW={\"6xl\"} py={4} spacing={4} justify=\"center\" align=\"center\">\n      <Text>Copyright © 2021 Starry Network</Text>\n    </Container>\n  </Box>\n);\n\nexport default Footer;\n","import { ChakraProvider } from \"@chakra-ui/react\"\n\nimport Navbar from './components/Navbar'\nimport Hero from './components/Hero'\nimport Features from './components/Features'\nimport More from './components/More'\nimport Footer from './components/Footer'\n\nfunction App() {\n  return (\n    <ChakraProvider>\n      <Navbar />\n      <Hero />\n      <Features />\n      <More />\n      <Footer />\n    </ChakraProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}